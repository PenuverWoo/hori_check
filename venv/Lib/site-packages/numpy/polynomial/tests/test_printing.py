from PIL import ImageGrab
from PIL import Image
import xlwt
import pytesseract as pyt
import time
import schedule
import matplotlib.pyplot as plt
import cv2
import PyQt5
from PyQt5.QtWidgets import *
from PyQt5.QtGui import QIcon

import sys
c = 0
text = '1'
def catch():
    size = (300,100,1300,600)
    im = ImageGrab.grab(size)
    im.save('C:/Users/Administrator/Desktop/hori_check/' + str(c) + '.jpg', 'JPEG')
    #im.save('C:/Users/Shaoyu Hu/Desktop/hori_check' + str(c) + '.jpg', 'JPEG')

    print(c)
    #I:\hori_check

def analysis():
    global text
    ana = Image.open('1.jpg')
    text = pyt.image_to_string(ana ,lang = 'eng')
    text =text.replace(" ","")
    text =text.replace("\n","")
    #text.strip('\n')
    print(text)
    #for i in range(len(text)):
     #   print (text[i]+'__'+'/n')
    pass

schedule.every(0.1).seconds.do(catch)

def serch_data(data,num_need):
    global text
    print('123')
    result = text.index(data)
    print(result)
    if text is None:
        print('without this data!!!')
    else:
        result = result + len(data)
        result1 = result + num_need
        print(text[result:result1])

def save_file(filename,contents):
    fh = open(filename,'w')
    fh.write(contents)
    fh.close()
    fh.save('filename','somestuff')

class App(QDialog):
    def __init__(self):
        super(App,self).__init__()
        self.initUi()

    def initUi(self):
        self.setWindowTitle("project")
        self.setGeometry(400,400,400,400)

        grid = QGridLayout()
        grid.setSpacing(8)

        grid = QGridLayout()
        grid.setSpacing(10)

        search_data = QLabel('search_data')#------------------- search data --------------------
        search_data_value = QLineEdit()

        grid.addWidget(search_data, 1, 0)
        grid.addWidget(search_data_value, 1, 1)


        search_data_button  = QPushButton('search',self)# ----------- search data button ----------
        search_data_button.setCheckable(True)
    